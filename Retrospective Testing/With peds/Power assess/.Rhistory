legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
n_p=rep(0, 6)
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
p_vals3 <- vector("list", 4)
p_vals4 <- vector("list", 4)
p_vals5 <- vector("list", 4)
p_vals6 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p[1] = n_p[1] + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p[2] = n_p[2] + 1;}
if(is.double(res[[3]][[j]][i])){
p_vals3[[i]] <- append(p_vals3[[i]] , res[[3]][[j]][i])
if (i ==1) n_p[3] = n_p[3] + 1;}
if(is.double(res[[4]][[j]][i])){
p_vals4[[i]] <- append(p_vals4[[i]] , res[[4]][[j]][i])
if (i ==1) n_p[4] = n_p[4] + 1;}
if(is.double(res[[5]][[j]][i])){
p_vals5[[i]] <- append(p_vals5[[i]] , res[[5]][[j]][i])
if (i ==1) n_p[5] = n_p[5] + 1;}
if(is.double(res[[6]][[j]][i])){
p_vals6[[i]] <- append(p_vals6[[i]] , res[[6]][[j]][i])
if (i ==1) n_p[6] = n_p[6] + 1;}
}
}
level = .05
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<level)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<level)))
power3 = unlist(lapply(p_vals3, function(x) mean(x[!is.na(x)]<level)))
power4 = unlist(lapply(p_vals4, function(x) mean(x[!is.na(x)]<level)))
power5 = unlist(lapply(p_vals5, function(x) mean(x[!is.na(x)]<level)))
power6 = unlist(lapply(p_vals6, function(x) mean(x[!is.na(x)]<level)))
props <- seq(0,100,by=20); props=props[-5]
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p[-6])
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1],power5[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i],power5[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40","100/0"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
n_p=rep(0, 6)
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
p_vals3 <- vector("list", 4)
p_vals4 <- vector("list", 4)
p_vals5 <- vector("list", 4)
p_vals6 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p[1] = n_p[1] + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p[2] = n_p[2] + 1;}
if(is.double(res[[3]][[j]][i])){
p_vals3[[i]] <- append(p_vals3[[i]] , res[[3]][[j]][i])
if (i ==1) n_p[3] = n_p[3] + 1;}
if(is.double(res[[4]][[j]][i])){
p_vals4[[i]] <- append(p_vals4[[i]] , res[[4]][[j]][i])
if (i ==1) n_p[4] = n_p[4] + 1;}
if(is.double(res[[5]][[j]][i])){
p_vals5[[i]] <- append(p_vals5[[i]] , res[[5]][[j]][i])
if (i ==1) n_p[5] = n_p[5] + 1;}
if(is.double(res[[6]][[j]][i])){
p_vals6[[i]] <- append(p_vals6[[i]] , res[[6]][[j]][i])
if (i ==1) n_p[6] = n_p[6] + 1;}
}
}
level = .05
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<level)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<level)))
power3 = unlist(lapply(p_vals3, function(x) mean(x[!is.na(x)]<level)))
power4 = unlist(lapply(p_vals4, function(x) mean(x[!is.na(x)]<level)))
power5 = unlist(lapply(p_vals5, function(x) mean(x[!is.na(x)]<level)))
power6 = unlist(lapply(p_vals6, function(x) mean(x[!is.na(x)]<level)))
props <- seq(0,100,by=20); props=props[-5]
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p[-6])
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1],power5[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i],power5[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40","100/0"))
legend('bottomright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
setwd("../../40%/log(2.9) high prev/")
load(".RData.filepart")
M
n_p=rep(0, 6)
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
p_vals3 <- vector("list", 4)
p_vals4 <- vector("list", 4)
p_vals5 <- vector("list", 4)
p_vals6 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p[1] = n_p[1] + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p[2] = n_p[2] + 1;}
if(is.double(res[[3]][[j]][i])){
p_vals3[[i]] <- append(p_vals3[[i]] , res[[3]][[j]][i])
if (i ==1) n_p[3] = n_p[3] + 1;}
if(is.double(res[[4]][[j]][i])){
p_vals4[[i]] <- append(p_vals4[[i]] , res[[4]][[j]][i])
if (i ==1) n_p[4] = n_p[4] + 1;}
if(is.double(res[[5]][[j]][i])){
p_vals5[[i]] <- append(p_vals5[[i]] , res[[5]][[j]][i])
if (i ==1) n_p[5] = n_p[5] + 1;}
if(is.double(res[[6]][[j]][i])){
p_vals6[[i]] <- append(p_vals6[[i]] , res[[6]][[j]][i])
if (i ==1) n_p[6] = n_p[6] + 1;}
}
}
level = .05
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<level)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<level)))
power3 = unlist(lapply(p_vals3, function(x) mean(x[!is.na(x)]<level)))
power4 = unlist(lapply(p_vals4, function(x) mean(x[!is.na(x)]<level)))
power5 = unlist(lapply(p_vals5, function(x) mean(x[!is.na(x)]<level)))
power6 = unlist(lapply(p_vals6, function(x) mean(x[!is.na(x)]<level)))
props <- seq(0,100,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p)
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1],power5[1],power6[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i],power5[i],power6[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40","80/20","100/0"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
setwd("../log(4.8)/")
n_p
M
load(".RData")
M
n_p=rep(0, 6)
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
p_vals3 <- vector("list", 4)
p_vals4 <- vector("list", 4)
p_vals5 <- vector("list", 4)
p_vals6 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p[1] = n_p[1] + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p[2] = n_p[2] + 1;}
if(is.double(res[[3]][[j]][i])){
p_vals3[[i]] <- append(p_vals3[[i]] , res[[3]][[j]][i])
if (i ==1) n_p[3] = n_p[3] + 1;}
if(is.double(res[[4]][[j]][i])){
p_vals4[[i]] <- append(p_vals4[[i]] , res[[4]][[j]][i])
if (i ==1) n_p[4] = n_p[4] + 1;}
if(is.double(res[[5]][[j]][i])){
p_vals5[[i]] <- append(p_vals5[[i]] , res[[5]][[j]][i])
if (i ==1) n_p[5] = n_p[5] + 1;}
if(is.double(res[[6]][[j]][i])){
p_vals6[[i]] <- append(p_vals6[[i]] , res[[6]][[j]][i])
if (i ==1) n_p[6] = n_p[6] + 1;}
}
}
level = .05
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<level)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<level)))
power3 = unlist(lapply(p_vals3, function(x) mean(x[!is.na(x)]<level)))
power4 = unlist(lapply(p_vals4, function(x) mean(x[!is.na(x)]<level)))
power5 = unlist(lapply(p_vals5, function(x) mean(x[!is.na(x)]<level)))
power6 = unlist(lapply(p_vals6, function(x) mean(x[!is.na(x)]<level)))
props <- seq(0,100,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p)
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1],power5[1],power6[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i],power5[i],power6[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40","80/20","100/0"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
setwd("../../60%/log(2.7)/")
laod("A.RData")
load("A.RData")
M
n_p=rep(0, 6)
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[1] = n_p1; n_p[2]= n_p2
load("B.RData")
M
n_p=rep(0, 6)
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power3 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power4 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[3] = n_p1; n_p[4]= n_p2
props <- seq(0,60,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p[1:4])
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
sds
n_p
load("A.RData")
n_p=rep(0, 6)
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[1] = n_p1; n_p[2]= n_p2
load("B.RData")
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power3 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power4 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[3] = n_p1; n_p[4]= n_p2
props <- seq(0,60,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p[1:4])
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
props <- seq(0,60,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p[1:4])
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
M
load("A.RData")
M
n_p
setwd("../../60%/log(7.5)/")
load("A.RData")
M
n_p=rep(0, 6)
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[1] = n_p1; n_p[2]= n_p2
load("B.RData")
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power3 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power4 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[3] = n_p1; n_p[4]= n_p2
load("C.RData")
M
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power5 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power6 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[5] = n_p1; n_p[6]= n_p2
props <- seq(0,100,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p)
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1],power5[1],power6[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i],power5[i],power6[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40","80/20","100/0"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
load(".RData")
n_p=rep(0, 6)
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
p_vals3 <- vector("list", 4)
p_vals4 <- vector("list", 4)
p_vals5 <- vector("list", 4)
p_vals6 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p[1] = n_p[1] + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p[2] = n_p[2] + 1;}
if(is.double(res[[3]][[j]][i])){
p_vals3[[i]] <- append(p_vals3[[i]] , res[[3]][[j]][i])
if (i ==1) n_p[3] = n_p[3] + 1;}
if(is.double(res[[4]][[j]][i])){
p_vals4[[i]] <- append(p_vals4[[i]] , res[[4]][[j]][i])
if (i ==1) n_p[4] = n_p[4] + 1;}
if(is.double(res[[5]][[j]][i])){
p_vals5[[i]] <- append(p_vals5[[i]] , res[[5]][[j]][i])
if (i ==1) n_p[5] = n_p[5] + 1;}
if(is.double(res[[6]][[j]][i])){
p_vals6[[i]] <- append(p_vals6[[i]] , res[[6]][[j]][i])
if (i ==1) n_p[6] = n_p[6] + 1;}
}
}
level = .05
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<level)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<level)))
power3 = unlist(lapply(p_vals3, function(x) mean(x[!is.na(x)]<level)))
power4 = unlist(lapply(p_vals4, function(x) mean(x[!is.na(x)]<level)))
power5 = unlist(lapply(p_vals5, function(x) mean(x[!is.na(x)]<level)))
power6 = unlist(lapply(p_vals6, function(x) mean(x[!is.na(x)]<level)))
props <- seq(0,100,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p)
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1],power5[1],power6[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i],power5[i],power6[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40","80/20","100/0"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
setwd("../../80%/")
load("A.RData")
n_p=rep(0, 6)
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power1 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power2 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[1] = n_p1; n_p[2]= n_p2
load("B.RData")
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power3 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power4 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[3] = n_p1; n_p[4]= n_p2
load("C.RData")
n_p1 <- 0; n_p2 <- 0
p_vals1 <- vector("list", 4) # List for 4 methods
p_vals2 <- vector("list", 4)
for(i in 1:4){
for(j in 1:n_rep){
if(is.double(res[[1]][[j]])){
p_vals1[[i]] <- append(p_vals1[[i]] , res[[1]][[j]][i])
if (i ==1) n_p1 = n_p1 + 1; }
if(is.double(res[[2]][[j]][i])){
p_vals2[[i]] <- append(p_vals2[[i]] , res[[2]][[j]][i])
if (i ==1) n_p2 = n_p2 + 1;
}
}
}
power5 = unlist(lapply(p_vals1, function(x) mean(x[!is.na(x)]<.05)))
power6 = unlist(lapply(p_vals2, function(x) mean(x[!is.na(x)]<.05)))
n_p[5] = n_p1; n_p[6]= n_p2
n_p
props <- seq(0,100,by=20)
library(Hmisc)
pdf("power_plot.pdf")
sds <- 2*sqrt(.25/n_p)
errbar(props, (y<-c(power1[1], power2[1],power3[1], power4[1],power5[1],power6[1])), y+sds, y-sds, type = "b", pch=16, col='red', errbar.col = 'red', ylim = c(0,1), cap = .03,
ylab = "Power", xlab = "Proportion of variance on logit scale due to polygenic effects/covariates", xaxt = "n" )
for(i in 2:4){
errbar(props, (y<-c(power1[i], power2[i], power3[i], power4[i],power5[i],power6[i])), y+sds, y-sds, type = "b",add=T, cap = .03,pch = c(15,17,18)[i-1], col=c('blue','lightgreen','purple')[i-1], errbar.col = c('blue','lightgreen','purple')[i-1])
}
axis(1, at = props, label = c("0/100", "20/80","40/60","60/40","80/20","100/0"))
legend('topright', horiz = F, legend = c('MCMCglmm', 'GMMAT','CARAT','CERAMIC'), pch = c(16,15,17,18), col = c('red','blue','lightgreen','purple'), cex=1.4, bty="n")
dev.off()
setwd("../")
